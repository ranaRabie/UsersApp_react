{"version":3,"sources":["components/Users.js","App.js","reportWebVitals.js","index.js"],"names":["list","Welcome","props","state","users","viewInterestsList","noUsers","this","getUsers","axios","get","then","response","setState","data","calculateFollowersNumber","getInterests","sortUsers","catch","error","console","log","array","value","filter","v","length","followers","map","user","following","flat","i","followersNum","getOccurrence","id","followersCounetr","sort","a","b","interests","usersArr","x","y","name","userId","includes","idIndex","indexOf","splice","push","userIndex","index","className","usrIndex","onClick","deleteInterests","viewInterests","deleteUser","Component","App","Users","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf42ca45.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nlet list = [];\nclass Welcome extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {users: [], viewInterestsList: [], noUsers: false};\n    }\n    componentDidMount() {\n        this.getUsers();\n    }\n    // componentDidUpdate() {\n    //   if(this.state.users.length === 0){\n    //     this.state.noUsers = true;\n    //     this.setState({noUsers: this.state.noUsers});\n    //   }\n    // }\n    getUsers(){\n        axios.get('/users.json')\n          .then(response => {\n            this.setState({users: response.data});\n            this.calculateFollowersNumber();\n            this.getInterests();\n            this.sortUsers();\n          })\n          .catch(error => {\n            console.log(error);\n        });\n    }\n    getOccurrence(array, value) {\n        return array.filter((v) => (v === value)).length;\n    }\n    calculateFollowersNumber(){\n        let followers = this.state.users.map((user) => user.following).flat();\n        let users = [...this.state.users];\n        for(let i = 0; i < users.length; i++){\n          let followersNum = this.getOccurrence(followers, this.state.users[i].id);\n          let user = {...users[i]};\n          user.followersCounetr = followersNum;\n          users[i] = user;\n          this.setState({users: users});\n        }\n    }\n    sortUsers(){\n        this.state.users.sort(function (a, b) {\n          return b.followersCounetr - a.followersCounetr;\n        });\n        this.setState({users: this.state.users});\n    }\n    getInterests(){\n        axios.get('/interests.json')\n          .then(response => {\n                let interests = response.data;\n                let usersArr = this.state.users;\n                for(let i = 0; i < usersArr.length; i++){\n                  if(usersArr[i].interests){\n                    for(let x = 0; x < interests.length; x++){  \n                        for(let y = 0; y < usersArr[i].interests.length; y++){\n                            if(usersArr[i].interests[y] === interests[x].id){\n                                usersArr[i].interests[y] = interests[x].name;\n                                this.setState({users: this.state.users});\n                            }\n                        }\n                      }\n                  }  \n                }\n          })\n          .catch(error => {\n            console.log(error);\n        });\n    }\n    viewInterests(userId){\n        if(list.includes(userId)){\n          let idIndex = list.indexOf(userId);\n          list.splice(idIndex, 1);\n          this.setState({viewInterestsList: list});\n        }else{\n          list.push(userId);\n          this.setState({viewInterestsList: list});\n        }\n    }\n    deleteInterests(userId, userIndex){\n        for(let i = 0; i < this.state.users.length; i++){\n          if(this.state.users[i].id === userId){\n            delete this.state.users[i].interests;\n            this.setState({users: this.state.users});\n            let index = list.indexOf(userIndex);\n            list.splice(index, 1);\n            this.setState({viewInterestsList: list});\n          }\n        }\n    }\n    deleteUser(userId){\n        for(let i = 0; i < this.state.users.length; i++){\n          if(this.state.users[i].id === userId){\n            let index = this.state.users.indexOf(this.state.users[i]);\n            this.state.users.splice(index, 1);\n            this.setState({users: this.state.users});\n            let idIndex = list.indexOf(userId);\n            list.splice(idIndex, 1);\n            this.setState({viewInterestsList: list});\n          }\n        }\n      }\n\n    render() {\n        return (\n          <div>\n            <h1>Users</h1>\n            <ul>\n              {this.state.users.length > 0 ? '' : <li className=\"user-item no-user\">no users found</li>}\n              {this.state.users.map((user, usrIndex) => {\n                return <li key={usrIndex} className=\"user-item\">\n                    <div className=\"user-head\">\n                      <h2>{user.name}</h2>\n                      <p>Followers: {user.followersCounetr}</p>\n                      {user.interests\n                      ? <div className=\"interests-wrapper\"><div  className={\"interests-list \" + (this.state.viewInterestsList.includes(usrIndex) ? 'show' : 'hide')}><span className=\"interest-item\" >{user.interests}</span><button onClick={() => this.deleteInterests(user.id, usrIndex)} className=\"link danger-link\">Delete Interests</button></div></div>    \n                      : ''\n                      }\n                    </div>\n                    <div className=\"user-footer\">\n                      {user.interests\n                      ? <button onClick={() => this.viewInterests(usrIndex)} className=\"btn dark-btn\">view interests</button>    \n                      : ''\n                      }\n                      <button onClick={() => this.deleteUser(user.id)} className=\"btn danger-btn\">delete user</button>\n                    </div>\n                </li>\n              })}\n            </ul>\n          </div>\n        );\n    }\n}\n\nexport default Welcome;","import React from 'react';\n\n\nimport './App.css';\nimport Users from './components/Users'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Users />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}